//
// Order.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Order: Codable, JSONEncodable, Hashable {

    public var id: Int64?
    public var customerId: Int64?
    public var dateOrdered: Date?
    public var status: String?
    public var totalPrice: Double?
    public var totalAmount: Double?
    public var totalTax: Double?
    public var totalDiscount: Double?
    public var taxRate: Double?

    public init(id: Int64? = nil, customerId: Int64? = nil, dateOrdered: Date? = nil, status: String? = nil, totalPrice: Double? = nil, totalAmount: Double? = nil, totalTax: Double? = nil, totalDiscount: Double? = nil, taxRate: Double? = nil) {
        self.id = id
        self.customerId = customerId
        self.dateOrdered = dateOrdered
        self.status = status
        self.totalPrice = totalPrice
        self.totalAmount = totalAmount
        self.totalTax = totalTax
        self.totalDiscount = totalDiscount
        self.taxRate = taxRate
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case customerId
        case dateOrdered
        case status
        case totalPrice
        case totalAmount
        case totalTax
        case totalDiscount
        case taxRate
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(customerId, forKey: .customerId)
        try container.encodeIfPresent(dateOrdered, forKey: .dateOrdered)
        try container.encodeIfPresent(status, forKey: .status)
        try container.encodeIfPresent(totalPrice, forKey: .totalPrice)
        try container.encodeIfPresent(totalAmount, forKey: .totalAmount)
        try container.encodeIfPresent(totalTax, forKey: .totalTax)
        try container.encodeIfPresent(totalDiscount, forKey: .totalDiscount)
        try container.encodeIfPresent(taxRate, forKey: .taxRate)
    }
}

